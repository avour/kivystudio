#: import icon kivystudio.tools.iconfonts.icon

<FileTopMenu>:
    auto_width: False
    width: '260dp'
    MenuButton:
        on_release: root.new_file()
        MenuLabel:
            text: 'New File'
        MenuLabel:
            text: 'Ctrl+N'
            type: 'shortcut'
    MenuButton:
        on_release: root.open_file()
        MenuLabel:
            text: 'Open File'
        MenuLabel:
            text: 'Ctrl+O'
            type: 'shortcut'
    MenuButton:
        on_release: root.open_folder()
        MenuLabel:
            text: 'Open Folder'
        MenuLabel:
            text: '[Ctrl+K Ctrl+O]'
            type: 'shortcut'
    MenuButton:
        on_release: root.save()
        MenuLabel:
            text: 'Save'
        MenuLabel:
            text: 'Ctrl+S'
            type: 'shortcut'
    ToggleMenuButton:
        text: 'Auto Save'
        state: 'down' if settings.auto_save else 'normal'
        on_state:
            if self.state=='down': settings.auto_save=1
            else: settings.auto_save=0
    ToggleMenuButton:
        text: 'Auto emulation'
        state: 'down' if settings.auto_emulate else 'normal'
        on_state:
            if self.state=='down': settings.auto_emulate=1
            else: settings.auto_emulate=0
    MenuButton:
        on_release: root.save_as()
        MenuLabel:
            text: 'Save as'
        MenuLabel:
            text: 'Ctrl+Shift+S'
            type: 'shortcut'
    MenuButton:
        on_release: root.save_all()
        MenuLabel:
            text: 'Save All'
    MenuButton:
        on_release: root.exit_window()
        MenuLabel:
            text: 'Exit'
        MenuLabel:
            text: 'Ctrl+Q'
            type: 'shortcut'


<EditTopMenu>:
    auto_width: False
    width: '260dp'
    MenuButton:
        on_release: root.do('undo')
        MenuLabel:
            text: 'Undo'
        MenuLabel:
            text: 'Ctrl+Z'
            type: 'shortcut'
    MenuButton:
        on_release: root.do('redo')
        MenuLabel:
            text: 'Redo'
        MenuLabel:
            text: 'Ctrl+Y'
            type: 'shortcut'
    MenuButton:
        on_release: root.do('cut')
        MenuLabel:
            text: 'Cut'
        MenuLabel:
            text: 'Ctrl+X'
            type: 'shortcut'
    MenuButton:
        on_release: root.do('copy')
        MenuLabel:
            text: 'Copy'
        MenuLabel:
            text: 'Ctrl+C'
            type: 'shortcut'
    MenuButton:
        on_release: root.do('paste')
        MenuLabel:
            text: 'Paste'
        MenuLabel:
            text: 'Ctrl+V'
            type: 'shortcut'
    MenuButton:
        on_release: root.do('find')
        MenuLabel:
            text: 'Find'
        MenuLabel:
            text: 'Ctrl+F'
            type: 'shortcut'
    MenuButton:
        on_release: root.do('find_in_file')
        MenuLabel:
            text: 'Find in Files'
        MenuLabel:
            text: 'Ctrl+Shift+F'
            type: 'shortcut'


<MenuLabel@Label>:
    text_size: self.size
    halign: 'left'
    valign: 'middle'
    padding: '20dp', 0
    type: 'text'
    color: (self.parent.text_colors[0] if self.type=='text' else self.parent.text_colors[1]) if self.parent else (0,0,0,1)


<MenuButton>:
    size_hint_y: None
    height: '30dp'
    canvas_color: 1,1,1,1
    text_colors: ((.1,.1,.1,1), (.5,.5,.5,1))
    on_hover:
        if self.hover: self.canvas_color = .2,.5,1,1; self.text_colors=((1,1,1,1),(1,1,1,1))
        else: self.canvas_color = 1,1,1,1; self.text_colors=((0,0,0,1), (.5,.5,.5,1))
    canvas.before:
        Color:
            rgba: self.canvas_color
        Rectangle:
            size: self.size
            pos: self.pos

<ToggleMenuButton>:
    size_hint_y: None
    height: '30dp'
    canvas_color: 1,1,1,1
    text_colors: ((.1,.1,.1,1), (.5,.5,.5,1))
    text: ''
    on_hover:
        if self.hover: self.canvas_color = .2,.5,1,1; self.text_colors=((1,1,1,1),(1,1,1,1))
        else: self.canvas_color = 1,1,1,1; self.text_colors=((0,0,0,1), (.5,.5,.5,1))
    on_state: tick.state=self.state
    canvas.before:
        Color:
            rgba: self.canvas_color
        Rectangle:
            size: self.size
            pos: self.pos

    MenuLabel:
        text: root.text
    IconToggleLabel:
        size_hint_x: None
        width: '48dp'
        id: tick
        color: .2,.2,.2,1
        on_state:
            if self.state=='normal': self.text=''
            else: self.text = icon('fa-check', 16)
        # on_parent: self.state='down'
