
<CodeContainer>:
    sizable_from: 'right'
    max_size: root.parent.width-self.parent.children[2].width if self.parent and len(self.parent.children)>2 else 0
    min_size: '700dp'
    BoxLayout:
        id: container
        orientation: 'vertical'


<CodePlace>:
    orientation: 'vertical'
    tab_manager: tab_manager
    pos_hint: {'center_y': .5, 'center_x': .5}
    CodeTabsContainer:
        size_hint_y: None
        height: '36dp'
        canvas.before:
            Color:
                rgba: (0.12, 0.12, 0.12, 1)
            Rectangle:
                size: self.size
                pos: self.pos

        # canvas to show shadow division
        canvas.after:
            Color:
                rgba: (0, 0, 0, .4)
            Line:
                points: [self.x,self.y, self.right,self.y]
            Color:
                rgba: (0, 0, 0, .3)
            Line:
                points: [self.x,self.y-1, self.x-1,self.y-1]
            Color:
                rgba: (0, 0, 0, .2)
            Line:
                points: [self.x,self.y-2, self.x,self.y-2]
            Color:
                rgba: (0, 0, 0, .1)
            Line:
                points: [self.x,self.y-3, self.x,self.y-3]
                width: 2

        GridLayout:
            rows: 1
            id: tab_manager
            size_hint_x: None
            width: self.minimum_width



<TabToggleButton>:
    size_hint_x: None
    width: self.minimum_width
    padding: '6dp'
    spacing: '3dp'
    canvas_color: (0.12, 0.12, 0.12, 1)
    allow_no_selection: False
    group: '__tabed_btn__'
    on_state:
        if self.state == 'down': self.canvas_color= (.2,.2,.2,1)
        else: self.canvas_color= (0.12, 0.12, 0.12, 1)
    canvas.before:
        Color:
            rgba: self.canvas_color
        Rectangle:
            size: self.size
            pos: self.pos
    IconLabel:
        size_hint_x: None
        width: '10dp'
        text: '%s'%(icon('fa-file-code-o'))
        color: .2,.5,1,.8
    Label:
        font_size: '13.5dp'
        text: root.text
        text_size: None, None
        padding: '3dp', 0
        shorten: True
        shorten_from: 'right'
        size_hint_x: None
        width: max(self.texture_size[0]+10, 110)
    TabPannelIndicator:
        id: indicator
        on_release: root.close_tab()

<TabPannelIndicator>:
    size_hint_x: None
    width: '12dp'


<CodeTabDropDown>:
    MenuButton:
        on_release: root.close_tab()
        MenuLabel:
            text: 'Close'
        MenuLabel:
            text: 'Ctrl+W'
            type: 'shortcut'
    ToggleMenuButton:
        text: 'Set file for emulation'
        on_state:
            if self.state=='down': root.set_for_emulation()
            else: root.set_for_emulation(remove=True)
    MenuButton:
        MenuLabel:
            text: 'Copy path'
        MenuLabel:
            text: 'Alt-Ctrl+C'
            type: 'shortcut'
    MenuButton:
        MenuLabel:
            text: 'Copy relative path'
        MenuLabel:
            text: 'Alt-Ctrl+Shift+C'
            type: 'shortcut'
        MenuLabel:
            text: 'Split Up'
    MenuButton:
        MenuLabel:
            text: 'Split Down'
    MenuButton:
        MenuLabel:
            text: 'Split Left'
    MenuButton:
        MenuLabel:
            text: 'Split Right'


<FileErrorTab>:
    text: "This file is not displayed because it is either binary or uses an unsupported text encoding."
    font_size: dp(13)* settings.dpi_scale
    canvas.before:
        Color:
            rgba: (0.12, 0.12, 0.12, 1)
        Rectangle:
            size: self.size
            pos: self.pos
